{
  "compilerOptions": {
    // 目标代码(ts -> js(es5/es6/es7))
    "target": "esnext",
    // 目标代码需要使用的模块化方案（commonjs require/module.exports/es module import/export)
    "module": "esnext",
    // 严格的检查(any)
    "strict": true,
    //对jsx进行怎么样的处理
    "jsx": "preserve",
    //辅助的导入功能
    "importHelpers": true,
    //按照nonde的方式去解析模块 import："/index.node"
    "moduleResolution": "node",
    //跳过对一些库的类型检测（axios, lodash, 其他第三方)
    "skipLibCheck": true,
    // export default/ module.exports = {}
    // es module 和 commonjs
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    // 要不要生成映射文件(ts -> js)
    "sourceMap": true,
    // 文件路径在解析时候，默认url
    "baseUrl": ".",
    // 指定具体要解析使用的类型
    "types": ["webpack-env"],
    // 路径解析
    "paths": {
      "@/*": ["src/*"]
    },
    // 可以指定在项目中可以使用哪些库的类型(Proxy/Window/Document )
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },

  //哪些文件时需要解析的
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  //哪些文件时不需要解析的
  "exclude": ["node_modules"]
}
